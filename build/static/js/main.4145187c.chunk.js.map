{"version":3,"sources":["homework2/Header.js","homework2/Home.js","homework2/RouteWithSubRoutes.js","router.config.js","homework2/Doc.js","homework2/Core.js","homework2/Guide.js","homework2/Api.js","homework2/Hooks.js","homework2/Tuto.js","homework2/Blog.js","homework2/Comm.js","homework2/Login.js","App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","console","log","style","textAlign","onClick","history","push","PrivateRoute","Com","component","rest","render","location","localStorage","getItem","pathname","state","RouteWithSubRoutes","route","pri","path","routes","withRouter","className","map","i","key","from","setItem","replace","App","ReactDOM","document","getElementById"],"mappings":"uOAmBeA,G,MAfA,WACX,OACI,gCACI,6BACI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,QAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,oBCQDC,EAlBF,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAER,yBAAKG,MAAO,CAACC,UAAU,WACnB,qCACA,uGACA,6BACI,4BAAQC,QACJ,kBAAIL,EAAMM,QAAQC,KAAK,UAD3B,4BAGA,4BAAQF,QACJ,kBAAIL,EAAMM,QAAQC,KAAK,WAD3B,+B,gBCThB,SAASC,EAAT,GAAoD,IAAjBC,EAAgB,EAA3BC,UAAmBC,EAAQ,6BAC/C,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACJC,aAAaC,QAAQ,YACf,kBAACN,EAAQE,GAEP,kBAAC,IAAD,CACIb,GAAI,CACAkB,SAAU,SACVC,MAAOJ,SA6BxBK,MApBf,SAA4BC,GACxB,OAAIA,EAAMC,IACC,kBAACZ,EAAD,CAAea,KAAMF,EAAME,KAClCX,UAAWS,EAAMT,UACjBY,OAAQH,EAAMG,SAIV,kBAAC,IAAD,CACID,KAAMF,EAAME,KACZT,OAAQ,SAAAZ,GACJ,OAAO,kBAACmB,EAAMT,UAAP,iBAAqBV,EAArB,CAA4BsB,OAAQH,EAAMG,cC4BtDA,EAjDA,CACX,CACID,KAAK,IACLxB,OAAM,EACNa,UAAUX,GAEd,CACIsB,KAAK,OACLX,UCeOa,aAzBH,SAACvB,GACT,OACI,yBAAKwB,UAAU,OACX,yBAAKA,UAAU,WAEX,kBAAC,IAAD,CAAQA,UAAU,WACbxB,EAAMsB,OAAOG,KAAI,SAACN,EAAOO,GAAR,OACd,kBAAC,EAAD,eAAoBC,IAAKD,GAAOP,QAIxC,kBAAC,IAAD,CAAUS,KAAK,OAAO9B,GAAG,eAE7B,4BACI,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,eDNZsB,KAAI,EACJE,OAAO,CACH,CACID,KAAK,YACLX,UEvBH,WACT,OAAO,6BACH,uCFuBI,CACIW,KAAK,aACLX,UG5BF,WACV,OACI,6BACI,wCH2BA,CACIW,KAAK,WACLX,UIhCJ,WACR,OACI,6BACI,sCJ+BA,CACIW,KAAK,aACLX,UKpCF,WACV,OACI,6BACI,0CLqCR,CACIW,KAAK,QACLX,UM1CK,WACT,OACI,sCNyCAU,KAAI,GAER,CACIC,KAAK,QACLX,UO/CK,WACT,OACI,uCP+CJ,CACIW,KAAK,QACLX,UQnDK,WACT,OACI,uCRmDJ,CACIW,KAAK,SACLX,USvDI,SAACV,GAMT,OACI,6BACI,4BAAQK,QAPF,WACVS,aAAae,QAAQ,WAAW,OAChC7B,EAAMM,QAAQwB,QAAQ9B,EAAMa,SAASI,SAKjC,oBC2CGc,EA9BH,WACR,OAAO,kBAAC,IAAD,KACH,kBAAC,EAAD,MACA,kBAAC,IAAD,KAkBQT,EAAOG,KAAI,SAACN,EAAOO,GAAR,OACP,kBAAC,EAAD,eAAoBC,IAAKD,GAAOP,U,MCtCpDa,IAASpB,OACP,kBAAC,EAAD,MACAqB,SAASC,eAAe,W","file":"static/js/main.4145187c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n                \r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch, withRouter } from 'react-router-dom'\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                localStorage.getItem('userinfo')\r\n                    ? <Com {...rest}/>\r\n                    : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: location\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n    if (route.pri) {\r\n        return <PrivateRoute  path={route.path} \r\n        component={route.component} \r\n        routes={route.routes}\r\n        />\r\n    } else {\r\n        return (\r\n            <Route\r\n                path={route.path}\r\n                render={props => {\r\n                    return <route.component {...props} routes={route.routes} />\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RouteWithSubRoutes","//config文件一般是配置文件\r\n\r\nimport Home from './homework2/Home';\r\nimport Doc from './homework2/Doc';\r\nimport Tuto from './homework2/Tuto';\r\nimport Blog from './homework2/Blog';\r\nimport Comm from './homework2/Comm';\r\nimport Login from './homework2/Login';\r\nimport Core from './homework2/Core';\r\nimport Guide from './homework2/Guide';\r\nimport Api from './homework2/Api';\r\nimport Hooks from './homework2/Hooks'\r\n\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog,\r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm,\r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login,\r\n    }\r\n\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    NavLink, Route, Redirect,\r\n    withRouter,\r\n    Switch\r\n} from 'react-router-dom'\r\nimport './doc.css';\r\nimport RouteWithSubRoutes from './RouteWithSubRoutes';\r\n\r\n\r\nconst Doc = (props) => {\r\n    return (\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                {/* 嵌套路由 */}\r\n                <Switch className='content'>\r\n                    {props.routes.map((route, i) => (\r\n                        <RouteWithSubRoutes key={i} {...route} />\r\n                    ))\r\n                    }\r\n                </Switch>\r\n                <Redirect from='/doc' to='/doc/core' />\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default withRouter(Doc);","import React from 'react';\r\nimport './doc.css'\r\n\r\nconst Core = () =>{\r\n    return <div>\r\n        <h2>Core</h2>\r\n    </div>\r\n}\r\n\r\nexport default Core","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            <h2>Guide</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            <h2>Api</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            <h2>Hooks</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login=(props)=>{\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom');\r\n        props.history.replace(props.location.state);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default Login","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch, withRouter } from 'react-router-dom'\r\nimport Header from './homework2/Header';\r\nimport routes from './router.config';\r\nimport RouteWithSubRoutes from './homework2/RouteWithSubRoutes'\r\n\r\n//10-12-下午-----------------------------------------------------------------------------\r\n\r\n// const App = ()=>{\r\n//   return <Router>\r\n//     <Switch>\r\n//     <Route exact path='/Home' component={Home} />\r\n//     <Route path='/cart' component={Cart} />\r\n//     </Switch>\r\n//     <Mytab/>\r\n//   </Router>\r\n// }\r\n\r\n// export default App\r\n\r\n//10-12-pc端-------------------------------------------------------------------------\r\n\r\n\r\nconst App = () => {\r\n    return <Router>\r\n        <Header />\r\n        <Switch>\r\n            {/* home组件这种配置方式会在Home组件的props中注入这四个属性 */}\r\n            {/* <Route exact path='/' component={Home} />\r\n            <PrivateRoute path='/doc' component={Doc} />\r\n            <PrivateRoute path='/tuto' component={Tuto} />\r\n            <PrivateRoute path='/blog' component={Blog} />\r\n            <Route path='/comm' component={Comm} />\r\n            <Route path='/login' component={Login} />\r\n            <Route paath='' component={() => <div>404</div>} /> */}\r\n\r\n            {/* routes.map(({pri,...rest})=>{\r\n             \t权限路由\r\n                 \tif(pri)\r\n                 \t\treturn <PrivateRoute {...rest} />\r\n                 \treturn\t<Route {...rest}/>\r\n                 }) */}\r\n\r\n            {\r\n                routes.map((route, i) => (\r\n                    <RouteWithSubRoutes key={i} {...route} />\r\n                ))\r\n            }\r\n\r\n        </Switch>\r\n    </Router>\r\n}\r\n\r\nexport default App","import React from 'react';//从node_modules引入的\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\n\r\n//10-12------------------------------------------------------------------------------------\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n// let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\r\n// fetch(url, {\r\n//     method: 'post',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n// })\r\n// .then(res=>res.json())\r\n// .then(res=>console.log(res))\r\n\r\n\r\n// ReactDOM.render(\r\n//   <App/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n//任务一-------------------------------------------------------------------------\r\n\r\n//01-基础组件应用\r\n// ReactDOM.render(\r\n//   <TodoList/>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\n//-----------------------------------------------------------------------------------\r\n\r\n// ReactDOM.render(\r\n//   <Context.Provider value='123'>\r\n//     <Hook/>\r\n//   </Context.Provider>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n// ReactDOM.render(\r\n//   <div><Hoc/><Detail/></div>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   <Demo01/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n// ReactDOM.render(\r\n//   <Control/>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\n\r\n// console.log($);\r\n\r\n// let ele = React.createElement(\r\n//     'h1',\r\n//     {id:'title'},\r\n//     React.createElement('div',{},'hello'),\r\n//     'react'\r\n//   )\r\n//   console.log(ele)\r\n//    ReactDOM.render(\r\n//       <div>ddd</div>,\r\n//       document.getElementById(\"root\")\r\n\r\n//     )\r\n\r\n\r\n//ctrl+alt+↑/↓ 向上/下复制\r\n//ctrl+d 删除\r\n// crtl+shift+←/→ 向左/右选中单词\r\n\r\n//list展示数据，数据都在home中\r\n// const List = (props) => {\r\n//   return <ul>\r\n//     {\r\n//       //map 一定要写return返回值\r\n//       props.data.map(\r\n//         (item) => <li key={item.id}>{item.title}</li>\r\n//       )\r\n//     }\r\n//   </ul>\r\n// }\r\n\r\n\r\n\r\n// const Buttons = () => {\r\n//   // const btns = [1, 2, 3, 4, 5];\r\n//   const handleClick = (num) => {\r\n//     //事件对象\r\n//     console.log(num)\r\n//   }\r\n//   return <div>\r\n//     {//循环别忘了外面的{}\r\n\r\n//       // btns.map(\r\n//       //   (item) =>\r\n//       //     // <button key={item}>{item}</button>\r\n//       //     <button key={item}\r\n//       //       onClick={handleClick()}>\r\n//       //       {/* handle这不能传参 */}\r\n//       //       {item}\r\n//       //       {/* 外层是个数件处理函数，里层是个普通函数调用 */}\r\n//       //     </button>\r\n//       // )\r\n//     }\r\n//   </div>\r\n// }\r\n\r\n//类组件extends，可以加状态\r\n// class Home extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       data: []\r\n//     }\r\n//     this.handleClick = this.handleClick.bind(this)\r\n//     // 点一次执行一次bind\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     fetch(\"https://cnodejs.org/api/v1/topics\")\r\n//       .then(res => res.json())\r\n//       .then(({ data }) => {\r\n//         console.log(data)\r\n//         this.setState({ data })//data是个对象\r\n//       })\r\n//   }\r\n//   //类里面写事件处理函数用箭头函数\r\n//   handleClick = () => {\r\n//     console.log(\"hello\");\r\n//   }\r\n\r\n//   getData = (page) => {\r\n//     fetch(\"https://cnodejs.org/api/v1/topics?page=\"+page)\r\n//       .then(res => res.json())\r\n//       .then(({ data }) => {\r\n//         this.setState({data})\r\n//       })\r\n//     console.log(page)\r\n//   }\r\n//   render() {\r\n//     const { data } = this.state;\r\n//     const btns=[1,2,3,4,5];\r\n//     return <div>\r\n//       {\r\n//         btns.map(\r\n//         (item)=>(\r\n//           <button\r\n//         key={item}\r\n//         onClick={()=>this.getData(item)}>\r\n//           {item}\r\n//         </button>\r\n//         )\r\n//       )\r\n//       }\r\n//       <Buttons />\r\n//       <List data={data} />\r\n\r\n//     </div>\r\n\r\n//     // const {data} = this.state;\r\n//     // return <ul>\r\n//     //   {\r\n//     //     this.state.data.map(\r\n//     //       (item)=><li>{item.title}</li>\r\n//     //     )\r\n//     //   }\r\n//     // </ul>\r\n//   }\r\n// }\r\n// ReactDOM.render(\r\n//   <Home data=\"abc\" />,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\n\r\n\r\n// let ele = <h1>hello react!</h1>\r\n\r\n// let ele = React.createElement(\"h1\",\r\n// {id:\"title\"},\r\n// \"hello\"\r\n// )\r\n\r\n// console.log(ele)\r\n\r\n// ReactDOM.render(\r\n//   ele,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <h1>hello react!</h1>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// 时钟\r\n// setInterval(() => {\r\n//   let ele = <h1 id=\"title\" className=\"tit\">\r\n//     <div>当前时间</div>\r\n//     {new Date().toLocaleString()}\r\n//   </h1>\r\n//   ReactDOM.render(\r\n//     ele,\r\n//     document.getElementById(\"root\")\r\n//   )\r\n// }, 1000);\r\n\r\n// //函数组件，UI（展示）组件，木偶组件，传什么渲染什么没有逻辑，没生命周期，必须return出一个jsx表达式\r\n// function App(props){\r\n//   console.log(props);\r\n//   const{title,id} = props;\r\n//   return <div>\r\n//     {/* 这是个组件不是变量了 */}\r\n//     {/* <div>{props.title}</div> */}\r\n//     <div>world</div>\r\n//   </div>\r\n// }\r\n\r\n// ReactDOM.render(\r\n//   <App title=\"abc\"/>,\r\n//   document.getElementById(\"root\")\r\n\r\n// )\r\n\r\n// //智能组件，类组件,有生命周期，必须return出一个jsx表达式\r\n// class Demo extends React.Component{\r\n//   //必须render()方法\r\n\r\n//   constructor(){\r\n//     //consttructor里必须调用super()\r\n//     super();\r\n//     //声明状态\r\n//     this.state={\r\n//       name:\"tom\"\r\n//     }\r\n//     //setTimeout后面跟箭头函数。this要指向demo要改的而不是window\r\n//     setInterval(()=>{\r\n//       //这个state不能这样改\r\n//       // this.state.name=\"anc\"\r\n//       //用setstate改，操作数据然后修改页面\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//     },1000)\r\n//   }\r\n//     render(){\r\n//       return <div>\r\n//         <div>{this.state.name}</div>\r\n//     {/* 这个this默认指向那？？ */}\r\n//         <App title={this.state.name}/>\r\n//       </div>\r\n//   }\r\n// }\r\n// ReactDOM.render(\r\n//   <Demo/>,\r\n//   document.getElementById(\"root\")\r\n\r\n// )\r\n\r\n\r\n\r\n// //实现ReactDOM.Render()，把一个js对象写入页面\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     //渲染对象，渲染到那（容器）\r\n//     //解构赋值\r\n//     const {type,props} = eleObj;\r\n//     //创建最外层节点\r\n//     let ele = document.createElement(type);\r\n//     //遍历属性对象，将属性添加到最外层节点对象中\r\n//     for (const prop in props) {\r\n//       if (prop ==\"children\"){\r\n//         if (typeof props.children == \"string\"){\r\n//           const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         //将最外层的子元素加进去\r\n//         props.children.forEach(child => {\r\n//           if (typeof child ==\"string\"){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             //递归，直到最里层\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop]=props[prop];\r\n//       }\r\n//     }\r\n\r\n//     //将第一层dom节点加入容器中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   <div>ddd</div>,\r\n//   document.getElementById(\"root\")\r\n\r\n// )"],"sourceRoot":""}